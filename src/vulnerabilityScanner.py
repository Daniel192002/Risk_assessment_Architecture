from gvm.connections import TLSConnection
from gvm.protocols.gmp import Gmp
from gvm.transforms import EtreeCheckCommandTransform
import databaseManager

class VulnerabilityScanner:
    def __init__(self):
        self.connection = TLSConnection(hostname='127.0.0.1', port=9390)
        self.transform = EtreeCheckCommandTransform()
    
    def scan_devices_from_db(self):
        with Gmp(connection=self.connection, transform=self.transform) as gmp:
            gmp.authenticate('admin', '4ceecd1d-3666-4386-bc72-35cd41a5ddb6')
            print("[+] Autenticación exitosa con GVM.")
            
        db = databaseManager.DatabaseManager(user="root", password="tfg2025", host="127.0.0.1")
        devices = db.get_devices()
        
        for mac, ipv4, ipv6 in devices:
            if ipv4 and mac:
                print(f"[+] Escaneando {ipv4} ({mac})...")
                self.scan_ip(ipv4)
        db.close()
    
    def scan_ip(self, ip):
        target_name = f"Scan-{ip}"
        target_id = self.gmp.create_target(name=target_name, hosts=[ip])
        
        config_id = self.gmp.get_scan_configs().xpath("scan_config[name='Full and fast']/@id")[0]
        task_name = f"Task-{ip}"
        task_id = self.gmp.create_task(name=task_name, config_id=config_id, target_id=target_id)
         
        self.gmp.start_task(task_id)
        print(f"[✓] Escaneo iniciado para {ip} (task ID: {task_id})")   
    